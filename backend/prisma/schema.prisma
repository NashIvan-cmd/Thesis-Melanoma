generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User_Account {
  id                  String           @id @default(dbgenerated("gen_random_uuid()"))
  username            String           @unique
  email               String           @unique
  password            String
  refreshToken        String?
  createdAt           DateTime         @default(now())
  policyAgreement     Boolean          @default(false)
  Mole_MetaData       Mole_MetaData[]
  User_FitzPatrick User_FitzPatrick?
}

model Mole_Assessment {
  id               String        @id @default(dbgenerated("gen_random_uuid()"))
  risk_assessment  Int         // This will be for the assessment score
  risk_summary     String      // For the NLP output
  model_assessment String      // benign or malignant
  createdAt        DateTime      @default(now())
  mole_id          String
  mole_ref         Mole_MetaData @relation(fields: [mole_id], references: [id])
}

model User_FitzPatrick {
  id             String        @id @default(dbgenerated("gen_random_uuid()"))
  hair_color     Int
  eye_color      Int
  age            Int
  skin_tone      Int
  freckles       Int
  skinSunReaction Int
  turnBrownDegree Int
  sunExposureTurnBrown Int
  faceReaction   Int
  bodyLastSunExposure Int
  exposedFaceToSun Int
  immune_health  String?
  gender         String
  genetics       String?
  skinType       String
  averageSunExposure String?
  user_account_foreignkey String @unique
  User_Account   User_Account @relation(fields: [user_account_foreignkey], references: [id])
}

  enum BodyPart {
    frontBody
    backBody
  }
  
model Mole_MetaData {
  id                 String            @id @default(dbgenerated("gen_random_uuid()"))
  body_orientation   BodyPart            
  body_part          String
  mole_owner         String
  x_coordinate       Int
  y_coordinate       Int
  overall_assessment Mole_Assessment[] // All the history of that mole
  User_Account       User_Account      @relation(fields: [mole_owner], references: [id])
  cloudId            String
  publicId           String
  createdAt          DateTime          @default(now())
}
